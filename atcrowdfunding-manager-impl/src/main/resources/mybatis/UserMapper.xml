<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lzcge.crowdfunding.manager.dao.UserMapper">



	<resultMap id="BaseResultMap" type="lzcge.crowdfunding.entity.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
		<result column="userpswd" property="userpswd" jdbcType="CHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="CHAR" />
	</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_user
		where id = #{id,jdbcType=INTEGER}
	</delete>

    <delete id="deleteUserList" parameterType="java.util.List">
		delete from t_user
		where id IN
		<foreach collection="list" item="user" open="(" separator="," close=")">
            #{user.id}
        </foreach>
	</delete>

    <delete id="deleteUserAndRoleList" parameterType="lzcge.crowdfunding.vo.RoleListVo">
		delete from t_user_role
		where userid=#{roleListVo.user.id,jdbcType=INTEGER} AND roleid IN
		<foreach collection="roleListVo.roleList" item="role" open="(" separator="," close=")">
            #{role.id,jdbcType=INTEGER}
        </foreach>
	</delete>

	<insert id="insert" parameterType="lzcge.crowdfunding.entity.User" useGeneratedKeys="true" keyProperty="id">
		insert into t_user (id,
		loginacct, userpswd,
		username, email, createtime
		)
		values
		(#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR},
		#{userpswd,jdbcType=CHAR},
		#{username,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}
		)
	</insert>

    <insert id="saveUserAndRoleList" parameterType="lzcge.crowdfunding.vo.RoleListVo" >
		insert into t_user_role (userid,roleid)
		values
        <trim suffixOverrides=",">
            <foreach collection="roleListVo.roleList" item="role" separator="," >
                (#{roleListVo.user.id,jdbcType=INTEGER},#{role.id,jdbcType=INTEGER})
            </foreach>
        </trim>
	</insert>


	<update id="updateByPrimaryKey" parameterType="lzcge.crowdfunding.entity.User" >
		update t_user
		set
        <trim suffixOverrides=",">
            <if test="loginacct != null">
                loginacct = #{loginacct,jdbcType=VARCHAR},
            </if>
            <if test="userpswd != null">
                userpswd =   #{userpswd,jdbcType=CHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=CHAR},
            </if>
        </trim>
		where id = #{id,jdbcType=INTEGER}

	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, loginacct, userpswd, username, email,
		createtime
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, createtime
		from t_user
	</select>

	<select id="login" parameterType="lzcge.crowdfunding.entity.User" resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, createtime
		from t_user where loginacct=#{loginacct} and userpswd=#{userpswd}
	</select>


    <select id="queryPage"  resultMap="BaseResultMap">
        select id, loginacct, userpswd,
        username, email, createtime
        from t_user
        <if test="queryIndexVo.queryText !=null and queryIndexVo.queryText !=''">
            <where>
                loginacct LIKE concat("%",#{queryIndexVo.queryText},"%")
            </where>
        </if>
        limit #{startIndex},#{queryIndexVo.pageSize}

    </select>


    <select id="selectAllCount" parameterType="lzcge.crowdfunding.vo.QueryIndexVo" resultType="Integer">
        select count(*)
        from t_user
        <if test="queryText !=null and queryText !=''">
            <where>
                loginacct LIKE concat("%",#{queryText},"%")
            </where>
        </if>
    </select>


    <select id="selectRoleByUserId" parameterType="java.lang.Integer" resultType="lzcge.crowdfunding.entity.Role">
          SELECT r.id,r.name FROM t_role r,t_user_role ur WHERE r.id=ur.roleid AND ur.userid=#{id}

    </select>

    <select id="selectAllRole" resultType="lzcge.crowdfunding.entity.Role">
        SELECT id,name FROM t_role
    </select>

</mapper>